@model DevDe.App.ViewModels.ProviderViewModel

@{
    ViewData["Title"] = "Edit Provider";
}

<h1>@ViewData["Title"]</h1>

<hr />

<form asp-action="Edit">

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <input type="hidden" asp-for="Id" />

    <div class="form-row">

        <div class="form-group col-md-6">

            <label asp-for="Name"></label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
            <br />
            <label asp-for="TypeProvider"></label>
            <div>
                <input type="radio" value="1" asp-for="TypeProvider" checked="@(Model.TypeProvider == 1)" /> CPF
                <input type="radio" value="2" asp-for="TypeProvider" checked="@(Model.TypeProvider == 2)" /> CNPJ
            </div>
            

        </div>

        <div class="form-group col-md-6">
            <label asp-for="Document"></label>
            <input asp-for="Document" class="form-control" />
            <span asp-validation-for="Document" class="text-danger"></span>
            <div>
                &nbsp;
            </div>
            <div class="form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Active" /> @Html.DisplayNameFor(model => model.Active)
                </label>
            </div>
        </div>

        

    </div>

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>

</form>


<div>
    <partial name="_AddressDetails" />
</div>

<hr />
<h4>Products</h4>
<div>
    <partial name="../Products/_ProductsList" model="@Model.Products" />
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
